var store = [ 
     
    { 
        "url": "/workshop-template-b/content/0-prep.html",
        "title": "Prep",
        "text": "Workshop Prep  To create your own materials using workshop-template-b, please create a free GitHub account if you do not have one already. Basic familiarity with the GitHub web interface will be helpful.  For a quick introduction check out GitHub’s Hello World guide and Try Git.  It is possible to create a website with this template using only GitHub’s web interface–in fact, it works great! However, for more advanced uses you will want Git, Ruby, and Jekyll installed on your computer to do local development.    Setup Overview                    Have a GitHub account.         Fork or import this repository.         Optional: have Git, Jekyll, and a nice text editor installed.                 Local Jekyll Setup [optional]  Install Git  Git is a free, distributed version control system. GitHub is a Git repository hosting service, a place to store and sync your work in the cloud–your Jekyll and GitHub Pages projects will be under Git version control, so you need the software on your machine.     Windows: install Git for Windows using the default options. This will give you Git, Git Bash, and Git GUI. Git Bash is a great terminal that lets you use UNIX style commands on Windows.   Mac: check if Git is already installed by opening terminal and typing git --version. If you do not have it, download the official Mac installer.   Linux: check if Git is already installed by opening terminal and typing git --version. If you do not have it, install from your distribution’s software center or package manager (for Ubuntu sudo apt install git).   If you are interested in using a visual GUI application integrated with GitHub, Windows and Mac users should also install GitHub Desktop using the default options. You can install GitHub Desktop in addition to other versions of Git.  There are other GUI apps available for managing and visualizing Git repositories, including Linux options.  Install Ruby  Ruby is a fairly young and developing programming language with some unique features.  To use Jekyll, you do not need to know anything about Ruby, but if you are curious, check out Ruby in 20 minutes. Frustratingly, different versions have many dependency and incompatibility problems. Because of these issues, many use Ruby Managers, such as RVM, to switch between versions. However, if you are just interested in working with Jekyll, using an installer for your OS should be sufficient. Jekyll requires a Ruby version &gt; 2.2.5.     Windows: Use RubyInstaller for Windows.            First, download the suggested stable version “WITH DEVKIT” (as of this writing, Ruby+Devkit 2.4.X (x64)) and double click to install. Use the install defaults, but make sure “Add Ruby executables to your PATH” is checked. On the final step, ensure the box to start the MSYS2 DevKit is checked.       Second, the installer will open a terminal window with options to install MSYS2 DevKit components. Choose option 3, “MSYS2 and MINGW development toolchain”, or simply press ENTER to install all the necessary dependencies. (This installer can be restarted by typing ridk install into a command prompt)           Mac: OS X has a version of Ruby installed by default. Check the version with ruby -v. If it is &gt; 2.2.5 you can use the system Ruby. However, a newer version can be installed using Homebrew, brew install ruby, or a manager such as rbenv or RVM. Check the official Jekyll Mac install docs for tips.   Linux: Even though the version will not be the most up-to-date, the simplest method is to use your distro’s repositories. For example on Ubuntu, sudo apt install ruby-full. Make sure the repository version is &gt; 2.2.5. You will also need the build tools Make and GCC, on Ubuntu get them with sudo apt install build-essential. For a more up-to-date version, use a manager such as RVM.   Install Jekyll  Jekyll is a Gem, a software package installed via Ruby’s management system called RubyGems (similar to Python’s Pip).  Open a terminal and type: gem install jekyll bundler  This will take a minute as Gem installs all the dependencies and builds extensions.     Note: Jekyll does not officially support Windows, however it is cross platform (they just don’t officially write windows documentation or check for bugs). There is a Jekyll on Windows page, but it can be out of date and inaccurate.   Text Editor  When working with code you should have a good text editor. Windows notepad does not handle UTF-8 encoding or UNIX line endings that are standard for cross platform applications.  For basic editing, Windows Notepad++, Mac TextEdit, or Linux Gedit are sufficient. However, a more complete code editor will be helpful for managing Jekyll projects.  Open-source cross platform suggestions:     Visual Studio Code   Atom  "
    }, 
    { 
        "url": "/workshop-template-b/content/1-intro.html",
        "title": "Intro",
        "text": "Introduction  One amazingly useful GitHub feature is GitHub Pages. It provides free static web hosting from any repository. Gh-pages is intended to host relatively simple sites for your GitHub portfolio, project, or documentation. Because it is free and a valuable transferable skill, this is a great option for teaching and learning.  Many organizations are using GitHub to collaboratively create and publish public workshop websites.  For example:     Programming Historian   Software Carpentry, Data Carpentry, Library Carpentry   this site!      Note: There are soft limits and guidelines for gh-pages usage: sites should be &lt; 1GB, use &lt; 100GB bandwidth per month, and make &lt; 10 builds per hour. If your site exceeds these quotas, GitHub will send you a notice asking you to modify the repository. All content must follow the community guidelines, e.g. no violence, obscene sex, or illegal stuff.   workshop-template-b  workshop-template-b is a Jekyll project to create a simple workshop website, with a Bootstrap theme, designed for hosting on gh-pages.  It works best for about 5 pages of instructions, plus index, all written in Markdown.  The navigation to the main pages is exposed at top and bottom of each page for easy stepping through the lessons.  Why?  Rather than making slides for a workshop, why not make a website?  It’s easier to write, access, share, and reuse.  GitHub and gh-pages makes this super easy.  It is a better Open Educational Resource since anyone can easily fork and adapt! "
    }, 
    { 
        "url": "/workshop-template-b/content/2-lesson.html",
        "title": "Start",
        "text": "Get Started  The workshop-template-b repository is a skeleton project.  This site demonstrates the output on gh-pages, and the content pages serve as examples.    Overview                    Fork or import the repository on GitHub.         Clone to your local machine, or work on the GitHub web interface to edit files.         Edit the _config.yml with your info.         Edit the content pages in markdown.         Add images to the “images” folder.         Push to GitHub (or commit on the web interface).         In your repo’s settings, activate gh-pages, using master branch.                 Config  Edit the _config.yml to get your workshop website set up.  Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Pellentesque eu velit felis.  Duis fermentum est nec mollis scelerisque. Vivamus interdum efficitur mauris, et dignissim velit egestas vitae.  Cras dignissim sagittis varius. Pellentesque eu laoreet dui.  Praesent congue:     eros = eget     accumsan euismod   Praesent congue, eros eget accumsan euismod, lorem dui vulputate leo, tincidunt efficitur risus metus ut risus.  Sed pharetra ipsum orci, eu cursus turpis semper egestas.     Pellentesque sodales, felis auctor auctor rutrum, velit quam interdum erat, sit amet placerat urna nisl at justo.   Substep  Nam maximus eget orci id pretium. Pellentesque feugiat mauris eu nulla viverra consectetur. Nullam rutrum augue eget mauris accumsan, ac elementum tellus lacinia. Sed pretium aliquet tortor in ornare. Sed eget aliquet metus. Integer sed arcu turpis. Duis auctor sollicitudin semper. Cras posuere, neque nec varius cursus, massa libero sodales elit, sed tempor nibh ex sit amet nisi. Quisque consequat ante quis diam malesuada, in imperdiet tortor mattis. Aliquam erat volutpat. Morbi tortor elit, sagittis quis nibh ut, gravida cursus arcu.        Be sure to replace all the example values!   Ut dapibus lectus tristique efficitur dictum. Quisque efficitur ornare sagittis. Donec ex sem, volutpat quis scelerisque quis, scelerisque non neque. Vivamus convallis felis vel eros pulvinar faucibus. Aliquam finibus pretium odio a pharetra. Nullam ac commodo magna. Fusce et feugiat sem. Nunc vitae scelerisque metus. Aenean sodales placerat mi in aliquet. Curabitur pulvinar auctor mauris quis faucibus. Ut commodo imperdiet ante, at dignissim tellus ultricies ut. Donec at lacus ultrices sem vulputate semper. Donec commodo porta nunc, non tristique mi interdum quis. Phasellus rhoncus bibendum ipsum, ac malesuada augue pulvinar et. Etiam finibus lacus massa, sit amet faucibus lorem consequat sit amet. "
    }, 
    { 
        "url": "/workshop-template-b/content/3-lesson.html",
        "title": "Content",
        "text": "Create Lesson Content  Edit the lesson Markdown files to create content pages.  Markdown is a standard to simplify writing content for the web.  GitHub markdown flavor can be used any where on GitHub and in Jekyll. The basics are intuitive, you can learn in about a minute! See Markdown in a Minute to get started.  When creating content pages:     create/edit content pages in the content directory.   to include a page in the nav, add nav: true to the file’s yml front matter.   the title: value will appear in the nav, sorted in the order of filenames. For simplicity use leading numbers in the lesson page filenames to create correct order.   the default layout does not add title to the page, so that it can be a short for the nav. So add a title in the Markdown content.   Components Includes  workshop-template-b contains a series of Liquid “includes” to add basic Bootstrap components to your Markdown content. Examples below demonstrate the includes.    Figures  {% include figure.html img=\"uidaho-workshop.jpg\" alt=\"workshop scene\" caption=\"Library workshops!\" width=\"75%\" %}        Library workshops!     Alerts  {% include alert.md text=\"This is a Bootstrap [Alert](https://getbootstrap.com/docs/4.1/components/alerts/)\" align=\"center\" color=\"success\" %}     This is a Bootstrap Alert     Link Buttons  {% include button.md text=\"Bootstrap Docs\" link=\"https://getbootstrap.com/docs/4.1/components/buttons/\" color=\"info\" %}   Bootstrap Docs     Cards  {% capture text %} 1. Can add more complex text using markdown. 2. Use a Liquid capture to create the text. 3. It magically becomes a [Bootstrap Card](https://getbootstrap.com/docs/4.1/components/card/). {% endcapture %} {% include card.md text=text header=\"Example Card\" title=\"Title example\" img=\"uidaho-workshop.jpg\" %}     Example Card  Title example                  Can add more complex text using markdown.         Use a Liquid capture to create the text.         It magically becomes a Bootstrap Card.                   Modal  {% include modal.md button=\"Try Me\" color=\"success\" title=\"Example Modal\" text=\"This is a modal, with little text.\" %}     Try Me        Example Modal  &times;            This is a modal, with little text.           "
    }, 
    { 
        "url": "/workshop-template-b/content/4-resources.html",
        "title": "Resources",
        "text": "Resources  To learn about using workshop-template-b, the Readme and content pages have some documentation.  Other workshop sites an minimal version of this template (no bootstrap):     get-git   hello-arduino   clean-your-data   go-go gh-pages   Make @ the MILL   Reference  Git &amp; GitHub  GitHub is a popular web service for hosting Git repositories–with benefits! It provides a handy web interface for editing and collaborating on repos, as well as, built in project management features and static web hosting. Accounts are free for public repositories–private repositories are available on a subscription pricing model. To learn more check out Hellow World on GitHub Guides or GitHub Training.  Markdown  Markdown is a standard to simplify writing content for the web.  GitHub markdown flavor can be used any where on GitHub and in Jekyll.     Markdown in a Minute   GitHub Guide Mastering Markdown   Bootstrap 4  Bootstrap is a CSS framework designed to streamline developing user interfaces for your website.  It is combined with a JavaScript library jQuery to simplify adding interactive components.  FontAwesome 5  FontAwesome is an icon set used to easily add icons to websites. Check the gallery for the freely available icons.  YAML  YAML is a human readable plain text data format. It is used in Jekyll for configuration, site data, and front matter. Jekyll projects are configured using the _config.yml file.  Liquid  Liquid is a flexible template language. In Jekyll it allows you to layout pages built from modular components and data, using the _includes, _layouts, and _data directories. Liquid includes features such as operators, loops, and filters to manipulate raw content.  Liquid statements are enclosed by {%  %} and variables in {{  }}.  Sass  Sass is a CSS extension / preprocessor.  All normal CSS is valid SCSS, but Sass adds many powerful functions and programatic features.  Writing SCSS is often easier and more sensible, for example by supporting nesting, variables, and operators.  Jekyll lets you write SASS in modular chucks called partials, in the _sass directory, that will be combined and compiled into normal CSS files when the site is built. "
    }, 
    { 
        "url": "/workshop-template-b/404.html",
        "title": "404",
        "text": "404? Sorry, but the page you were trying to view does not exist.   ____________   ------------         \\   ^__^          \\  (oo)\\_______             (__)\\       )\\/\\                 ||----w |                 ||     ||   "
    }, 
    { 
        "url": "/workshop-template-b/",
        "title": "Home",
        "text": "Bootstrap Workshop Template!        Library workshop   A minimal Jekyll theme with Bootstrap for creating workshop websites.  Add your workshop abstract here!  Write a workshop abstract here.  Learn how to create a super quick easy website for a workshop by writing a few markdown files!  Host it for free on GitHub with gh-pages, and share! Fun!  See also: workshop-template, original minimal version.                                              Contents:                                                           Prep                                          Intro                                          Start                                          Content                                          Resources                                                   Hosted by University of Idaho Library, 2019.    Theme: workshop-template-b by evanwill is built using Jekyll on GitHub Pages. The site is styled using Bootstrap with FontAwesome icons. Content: CC BY-SA evan will 2019 (get source code).  "
    }, 
    { 
        "url": "/workshop-template-b/search/",
        "title": "Site Search",
        "text": "# Search site content "
    }];
